# learned Inheritance in java.

public class Person {
	private String name;
	public Person() {
		name = "No name yet";
	}
	public Person(String initialName) {
		name = initialName;
	}
	public void setName(String newName) {
		name = newName;
	}
	public String getName() {
		return name;
	}
	public void writeOutput() {
		System.out.println("Name : " + name);
	}
	public boolean hasSameName(Person otherPerson) {
		return this.name.equalsIgnoreCase(otherPerson.name);
	}
}


public class Student extends Person {
	private int studentNumber;
	public Student() {
		super();
		studentNumber=0;
	}
	public Student(String initialName, int initialStudentNumber) {
		super(initialName);
		studentNumber = initialStudentNumber;
	}
	public void reset(String newName, int newStudentNumber) {
		setName(newName);
		studentNumber = newStudentNumber;
	}
	public int getStudentNumber() {
		return studentNumber;
	}
	public void setStudentNumber(int newStudentNumber) {
		studentNumber = newStudentNumber;
	}
	public void writeOutput() {
		System.out.println("Name : " + getName());
		System.out.println("Student Number : " + studentNumber);
	}
	public boolean equals(Student otherStudent) {
		return this.hasSameName(otherStudent) && (this.studentNumber == otherStudent.studentNumber);
	}
	public String getName(String title) {
		return title + getName();
	}
}


public class Undergraduate extends Student {
	private int level;
	public Undergraduate() {
		super();
		level = 1;
	}
	public Undergraduate(String initialName, int initialStudentNumber, int initialLevel) {
		super(initialName, initialStudentNumber);
		setLevel(initialLevel);
	}
	public void reset(String newName, int newStudentNumber, int newLevel) {
		reset(newName, newStudentNumber);
		setLevel(newLevel);
	}
	public int getLevel() {
		return level;
	}
	public void setLevel(int newLevel) {
		if((1<=newLevel) && (newLevel<=4))
			level = newLevel;
		else {
			System.out.println("Illegal Level!");
			System.exit(0);	
		}
	}
	public void writeOutput() {
		super.writeOutput();
		System.out.println("StudentLevel : " + level);	
	}
	public boolean equals(Undergraduate otherUndergraduate) {
		return equals((Student)otherUndergraduate) && (this.level == otherUndergraduate.level);
	}
}

